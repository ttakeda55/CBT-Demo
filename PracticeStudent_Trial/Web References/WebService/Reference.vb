'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.269
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.269 によって自動生成されました。
'
Namespace WebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="StudentSoap", [Namespace]:="http://localhost/")>  _
    Partial Public Class Student
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InitializeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileDownLoad_DATAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileDownLoad_SYTEMDATAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileUpLoad_UPLOADOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileUpLoad_DATAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PracticeResultFileUpLoadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServerNowDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QuestionCollectionDownLoadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QuestionZipDownLoadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogFileUpLoadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CST.CBT.eIPSTA.PracticeStudent_Trial.My.MySettings.Default.PracticeStudent_WebService_CBTService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InitializeCompleted As InitializeCompletedEventHandler
        
        '''<remarks/>
        Public Event FileDownLoad_DATACompleted As FileDownLoad_DATACompletedEventHandler
        
        '''<remarks/>
        Public Event FileDownLoad_SYTEMDATACompleted As FileDownLoad_SYTEMDATACompletedEventHandler
        
        '''<remarks/>
        Public Event FileUpLoad_UPLOADCompleted As FileUpLoad_UPLOADCompletedEventHandler
        
        '''<remarks/>
        Public Event FileUpLoad_DATACompleted As FileUpLoad_DATACompletedEventHandler
        
        '''<remarks/>
        Public Event PracticeResultFileUpLoadCompleted As PracticeResultFileUpLoadCompletedEventHandler
        
        '''<remarks/>
        Public Event GetServerNowDateCompleted As GetServerNowDateCompletedEventHandler
        
        '''<remarks/>
        Public Event QuestionCollectionDownLoadCompleted As QuestionCollectionDownLoadCompletedEventHandler
        
        '''<remarks/>
        Public Event QuestionZipDownLoadCompleted As QuestionZipDownLoadCompletedEventHandler
        
        '''<remarks/>
        Public Event LogFileUpLoadCompleted As LogFileUpLoadCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/Initialize", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Initialize() As Boolean
            Dim results() As Object = Me.Invoke("Initialize", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InitializeAsync()
            Me.InitializeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InitializeAsync(ByVal userState As Object)
            If (Me.InitializeOperationCompleted Is Nothing) Then
                Me.InitializeOperationCompleted = AddressOf Me.OnInitializeOperationCompleted
            End If
            Me.InvokeAsync("Initialize", New Object(-1) {}, Me.InitializeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInitializeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InitializeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InitializeCompleted(Me, New InitializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FileDownLoad_DATA", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileDownLoad_DATA(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("FileDownLoad_DATA", New Object() {fileName, contents})
            contents = CType(results(1),Byte())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileDownLoad_DATAAsync(ByVal fileName As String, ByVal contents() As Byte)
            Me.FileDownLoad_DATAAsync(fileName, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileDownLoad_DATAAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.FileDownLoad_DATAOperationCompleted Is Nothing) Then
                Me.FileDownLoad_DATAOperationCompleted = AddressOf Me.OnFileDownLoad_DATAOperationCompleted
            End If
            Me.InvokeAsync("FileDownLoad_DATA", New Object() {fileName, contents}, Me.FileDownLoad_DATAOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileDownLoad_DATAOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileDownLoad_DATACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileDownLoad_DATACompleted(Me, New FileDownLoad_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FileDownLoad_SYTEMDATA", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileDownLoad_SYTEMDATA(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("FileDownLoad_SYTEMDATA", New Object() {fileName, contents})
            contents = CType(results(1),Byte())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileDownLoad_SYTEMDATAAsync(ByVal fileName As String, ByVal contents() As Byte)
            Me.FileDownLoad_SYTEMDATAAsync(fileName, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileDownLoad_SYTEMDATAAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.FileDownLoad_SYTEMDATAOperationCompleted Is Nothing) Then
                Me.FileDownLoad_SYTEMDATAOperationCompleted = AddressOf Me.OnFileDownLoad_SYTEMDATAOperationCompleted
            End If
            Me.InvokeAsync("FileDownLoad_SYTEMDATA", New Object() {fileName, contents}, Me.FileDownLoad_SYTEMDATAOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileDownLoad_SYTEMDATAOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileDownLoad_SYTEMDATACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileDownLoad_SYTEMDATACompleted(Me, New FileDownLoad_SYTEMDATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FileUpLoad_UPLOAD", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileUpLoad_UPLOAD(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("FileUpLoad_UPLOAD", New Object() {fileName, contents})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileUpLoad_UPLOADAsync(ByVal fileName As String, ByVal contents() As Byte)
            Me.FileUpLoad_UPLOADAsync(fileName, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileUpLoad_UPLOADAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.FileUpLoad_UPLOADOperationCompleted Is Nothing) Then
                Me.FileUpLoad_UPLOADOperationCompleted = AddressOf Me.OnFileUpLoad_UPLOADOperationCompleted
            End If
            Me.InvokeAsync("FileUpLoad_UPLOAD", New Object() {fileName, contents}, Me.FileUpLoad_UPLOADOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileUpLoad_UPLOADOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileUpLoad_UPLOADCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileUpLoad_UPLOADCompleted(Me, New FileUpLoad_UPLOADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FileUpLoad_DATA", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileUpLoad_DATA(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("FileUpLoad_DATA", New Object() {fileName, contents})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileUpLoad_DATAAsync(ByVal fileName As String, ByVal contents() As Byte)
            Me.FileUpLoad_DATAAsync(fileName, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileUpLoad_DATAAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.FileUpLoad_DATAOperationCompleted Is Nothing) Then
                Me.FileUpLoad_DATAOperationCompleted = AddressOf Me.OnFileUpLoad_DATAOperationCompleted
            End If
            Me.InvokeAsync("FileUpLoad_DATA", New Object() {fileName, contents}, Me.FileUpLoad_DATAOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileUpLoad_DATAOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileUpLoad_DATACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileUpLoad_DATACompleted(Me, New FileUpLoad_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/PracticeResultFileUpLoad", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PracticeResultFileUpLoad(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("PracticeResultFileUpLoad", New Object() {fileName, contents})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PracticeResultFileUpLoadAsync(ByVal fileName As String, ByVal contents() As Byte)
            Me.PracticeResultFileUpLoadAsync(fileName, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PracticeResultFileUpLoadAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.PracticeResultFileUpLoadOperationCompleted Is Nothing) Then
                Me.PracticeResultFileUpLoadOperationCompleted = AddressOf Me.OnPracticeResultFileUpLoadOperationCompleted
            End If
            Me.InvokeAsync("PracticeResultFileUpLoad", New Object() {fileName, contents}, Me.PracticeResultFileUpLoadOperationCompleted, userState)
        End Sub
        
        Private Sub OnPracticeResultFileUpLoadOperationCompleted(ByVal arg As Object)
            If (Not (Me.PracticeResultFileUpLoadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PracticeResultFileUpLoadCompleted(Me, New PracticeResultFileUpLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/GetServerNowDate", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServerNowDate(ByRef ServerDateTime As Date) As Boolean
            Dim results() As Object = Me.Invoke("GetServerNowDate", New Object() {ServerDateTime})
            ServerDateTime = CType(results(1),Date)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServerNowDateAsync(ByVal ServerDateTime As Date)
            Me.GetServerNowDateAsync(ServerDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServerNowDateAsync(ByVal ServerDateTime As Date, ByVal userState As Object)
            If (Me.GetServerNowDateOperationCompleted Is Nothing) Then
                Me.GetServerNowDateOperationCompleted = AddressOf Me.OnGetServerNowDateOperationCompleted
            End If
            Me.InvokeAsync("GetServerNowDate", New Object() {ServerDateTime}, Me.GetServerNowDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServerNowDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServerNowDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServerNowDateCompleted(Me, New GetServerNowDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/QuestionCollectionDownLoad", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QuestionCollectionDownLoad(ByVal files() As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef data() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("QuestionCollectionDownLoad", New Object() {files, data})
            data = CType(results(1),Byte())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QuestionCollectionDownLoadAsync(ByVal files() As String, ByVal data() As Byte)
            Me.QuestionCollectionDownLoadAsync(files, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QuestionCollectionDownLoadAsync(ByVal files() As String, ByVal data() As Byte, ByVal userState As Object)
            If (Me.QuestionCollectionDownLoadOperationCompleted Is Nothing) Then
                Me.QuestionCollectionDownLoadOperationCompleted = AddressOf Me.OnQuestionCollectionDownLoadOperationCompleted
            End If
            Me.InvokeAsync("QuestionCollectionDownLoad", New Object() {files, data}, Me.QuestionCollectionDownLoadOperationCompleted, userState)
        End Sub
        
        Private Sub OnQuestionCollectionDownLoadOperationCompleted(ByVal arg As Object)
            If (Not (Me.QuestionCollectionDownLoadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QuestionCollectionDownLoadCompleted(Me, New QuestionCollectionDownLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/QuestionZipDownLoad", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QuestionZipDownLoad(ByVal zipDirectoryName As String, ByVal files() As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef contents() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("QuestionZipDownLoad", New Object() {zipDirectoryName, files, contents})
            contents = CType(results(1),Byte())
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QuestionZipDownLoadAsync(ByVal zipDirectoryName As String, ByVal files() As String, ByVal contents() As Byte)
            Me.QuestionZipDownLoadAsync(zipDirectoryName, files, contents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QuestionZipDownLoadAsync(ByVal zipDirectoryName As String, ByVal files() As String, ByVal contents() As Byte, ByVal userState As Object)
            If (Me.QuestionZipDownLoadOperationCompleted Is Nothing) Then
                Me.QuestionZipDownLoadOperationCompleted = AddressOf Me.OnQuestionZipDownLoadOperationCompleted
            End If
            Me.InvokeAsync("QuestionZipDownLoad", New Object() {zipDirectoryName, files, contents}, Me.QuestionZipDownLoadOperationCompleted, userState)
        End Sub
        
        Private Sub OnQuestionZipDownLoadOperationCompleted(ByVal arg As Object)
            If (Not (Me.QuestionZipDownLoadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QuestionZipDownLoadCompleted(Me, New QuestionZipDownLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/LogFileUpLoad", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LogFileUpLoad(ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal contents() As Byte, ByVal groupId As String, ByVal userId As String) As Boolean
            Dim results() As Object = Me.Invoke("LogFileUpLoad", New Object() {fileName, contents, groupId, userId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogFileUpLoadAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal groupId As String, ByVal userId As String)
            Me.LogFileUpLoadAsync(fileName, contents, groupId, userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogFileUpLoadAsync(ByVal fileName As String, ByVal contents() As Byte, ByVal groupId As String, ByVal userId As String, ByVal userState As Object)
            If (Me.LogFileUpLoadOperationCompleted Is Nothing) Then
                Me.LogFileUpLoadOperationCompleted = AddressOf Me.OnLogFileUpLoadOperationCompleted
            End If
            Me.InvokeAsync("LogFileUpLoad", New Object() {fileName, contents, groupId, userId}, Me.LogFileUpLoadOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogFileUpLoadOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogFileUpLoadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogFileUpLoadCompleted(Me, New LogFileUpLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub InitializeCompletedEventHandler(ByVal sender As Object, ByVal e As InitializeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InitializeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FileDownLoad_DATACompletedEventHandler(ByVal sender As Object, ByVal e As FileDownLoad_DATACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileDownLoad_DATACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property contents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FileDownLoad_SYTEMDATACompletedEventHandler(ByVal sender As Object, ByVal e As FileDownLoad_SYTEMDATACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileDownLoad_SYTEMDATACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property contents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FileUpLoad_UPLOADCompletedEventHandler(ByVal sender As Object, ByVal e As FileUpLoad_UPLOADCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileUpLoad_UPLOADCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FileUpLoad_DATACompletedEventHandler(ByVal sender As Object, ByVal e As FileUpLoad_DATACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileUpLoad_DATACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PracticeResultFileUpLoadCompletedEventHandler(ByVal sender As Object, ByVal e As PracticeResultFileUpLoadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PracticeResultFileUpLoadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetServerNowDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetServerNowDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServerNowDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ServerDateTime() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub QuestionCollectionDownLoadCompletedEventHandler(ByVal sender As Object, ByVal e As QuestionCollectionDownLoadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QuestionCollectionDownLoadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property data() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub QuestionZipDownLoadCompletedEventHandler(ByVal sender As Object, ByVal e As QuestionZipDownLoadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QuestionZipDownLoadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property contents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LogFileUpLoadCompletedEventHandler(ByVal sender As Object, ByVal e As LogFileUpLoadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogFileUpLoadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
